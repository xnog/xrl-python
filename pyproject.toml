[tool.poetry]
name = "xrl-python"
version = "0.2.0"
description = "eXtended Rate Limiter - A distributed rate limiter with multiple algorithms (Token Bucket and Fixed Window)"
authors = ["Felipe Nogueira Gaudio <xnogueira@gmail.com>"]
maintainers = ["Felipe Nogueira Gaudio <xnogueira@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/xnog/xrl-python"
repository = "https://github.com/xnog/xrl-python"
documentation = "https://github.com/xnog/xrl-python#readme"
keywords = ["rate-limiting", "redis", "distributed", "token-bucket", "fixed-window", "async"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
packages = [{include = "xrl", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
redis = {extras = ["hiredis"], version = ">=5.0,<7.0"}

[tool.poetry.group.test.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.21.0"
black = "^23.0.0"
isort = "^5.0.0"
mypy = "^1.16.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
strict = true
files = ["src/xrl"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]
